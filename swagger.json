{
	"swagger": "2.0",
	"info": {
		"title": "Structured Threat Information eXpression Store Services",
		"description": "Cyber Threat Intelligence Store Services for Structured Threat Information eXpression 2.0",
		"license": {
			"name": "MIT",
			"url": "https://opensource.org/licenses/MIT"
		},
		"version": "0.2.1"
	},
	"basePath": "/cti-stix-store-api",
	"paths": {
		"/marking-definitions": {
			"post": {
				"tags": ["MarkingDefinition"],
				"summary": "Create a new instance of the model and persist it into the data source.",
				"operationId": "MarkingDefinition.create",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "Model instance data",
					"required": false,
					"schema": {
						"$ref": "#/definitions/MarkingDefinitionResource"
					}
				}],
				"responses": {
					"201": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/MarkingDefinitionResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"get": {
				"tags": ["MarkingDefinition"],
				"summary": "Find all instances of the model matched by filter from the data source.",
				"operationId": "MarkingDefinition.find",
				"parameters": [{
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields, where, include, order, offset, and limit",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/MarkingDefinitionResources"
						}
					}
				},
				"deprecated": false
			}
		},
		"/marking-definitions/{id}": {
			"get": {
				"tags": ["MarkingDefinition"],
				"summary": "Find a model instance by {{id}} from the data source.",
				"operationId": "MarkingDefinition.findById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}, {
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields and include",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/MarkingDefinitionResource"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"delete": {
				"tags": ["MarkingDefinition"],
				"summary": "Delete a model instance by {{id}} from the data source.",
				"operationId": "MarkingDefinition.deleteById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"204": {
						"description": "Deleted Completed"
					}
				},
				"deprecated": false
			},
			"patch": {
				"tags": ["MarkingDefinition"],
				"summary": "Patch attributes for a model instance and persist it into the data source.",
				"operationId": "MarkingDefinition.prototype.patchAttributes",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "An object of model property name/value pairs",
					"required": false,
					"schema": {
						"$ref": "#/definitions/MarkingDefinitionResource"
					}
				}, {
					"name": "id",
					"in": "path",
					"description": "PersistedModel id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/MarkingDefinitionResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			}
		},
		"/attack-patterns": {
			"post": {
				"tags": ["AttackPattern"],
				"summary": "Create a new instance of the model and persist it into the data source.",
				"operationId": "AttackPattern.create",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "Model instance data",
					"required": false,
					"schema": {
						"$ref": "#/definitions/AttackPatternResource"
					}
				}],
				"responses": {
					"201": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/AttackPatternResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"get": {
				"tags": ["AttackPattern"],
				"summary": "Find all instances of the model matched by filter from the data source.",
				"operationId": "AttackPattern.find",
				"parameters": [{
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields, where, include, order, offset, and limit",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/AttackPatternResources"
						}
					}
				},
				"deprecated": false
			}
		},
		"/attack-patterns/{id}": {
			"get": {
				"tags": ["AttackPattern"],
				"summary": "Find a model instance by {{id}} from the data source.",
				"operationId": "AttackPattern.findById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}, {
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields and include",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/AttackPatternResource"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"delete": {
				"tags": ["AttackPattern"],
				"summary": "Delete a model instance by {{id}} from the data source.",
				"operationId": "AttackPattern.deleteById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"204": {
						"description": "Deleted Completed"
					}
				},
				"deprecated": false
			},
			"patch": {
				"tags": ["AttackPattern"],
				"summary": "Patch attributes for a model instance and persist it into the data source.",
				"operationId": "AttackPattern.prototype.patchAttributes",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "An object of model property name/value pairs",
					"required": false,
					"schema": {
						"$ref": "#/definitions/AttackPatternResource"
					}
				}, {
					"name": "id",
					"in": "path",
					"description": "PersistedModel id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/AttackPatternResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			}
		},
		"/campaigns": {
			"post": {
				"tags": ["Campaign"],
				"summary": "Create a new instance of the model and persist it into the data source.",
				"operationId": "Campaign.create",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "Model instance data",
					"required": false,
					"schema": {
						"$ref": "#/definitions/CampaignResource"
					}
				}],
				"responses": {
					"201": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/CampaignResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"get": {
				"tags": ["Campaign"],
				"summary": "Find all instances of the model matched by filter from the data source.",
				"operationId": "Campaign.find",
				"parameters": [{
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields, where, include, order, offset, and limit",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/CampaignResources"
						}
					}
				},
				"deprecated": false
			}
		},
		"/campaigns/{id}": {
			"get": {
				"tags": ["Campaign"],
				"summary": "Find a model instance by {{id}} from the data source.",
				"operationId": "Campaign.findById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}, {
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields and include",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/CampaignResource"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"delete": {
				"tags": ["Campaign"],
				"summary": "Delete a model instance by {{id}} from the data source.",
				"operationId": "Campaign.deleteById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"204": {
						"description": "Deleted Completed"
					}
				},
				"deprecated": false
			},
			"patch": {
				"tags": ["Campaign"],
				"summary": "Patch attributes for a model instance and persist it into the data source.",
				"operationId": "Campaign.prototype.patchAttributes",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "An object of model property name/value pairs",
					"required": false,
					"schema": {
						"$ref": "#/definitions/CampaignResource"
					}
				}, {
					"name": "id",
					"in": "path",
					"description": "PersistedModel id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/CampaignResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			}
		},
		"/course-of-actions": {
			"post": {
				"tags": ["CourseOfAction"],
				"summary": "Create a new instance of the model and persist it into the data source.",
				"operationId": "CourseOfAction.create",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "Model instance data",
					"required": false,
					"schema": {
						"$ref": "#/definitions/CourseOfActionResource"
					}
				}],
				"responses": {
					"201": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/CourseOfActionResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"get": {
				"tags": ["CourseOfAction"],
				"summary": "Find all instances of the model matched by filter from the data source.",
				"operationId": "CourseOfAction.find",
				"parameters": [{
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields, where, include, order, offset, and limit",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/CourseOfActionResources"
						}
					}
				},
				"deprecated": false
			}
		},
		"/course-of-actions/{id}": {
			"get": {
				"tags": ["CourseOfAction"],
				"summary": "Find a model instance by {{id}} from the data source.",
				"operationId": "CourseOfAction.findById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}, {
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields and include",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/CourseOfActionResource"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"delete": {
				"tags": ["CourseOfAction"],
				"summary": "Delete a model instance by {{id}} from the data source.",
				"operationId": "CourseOfAction.deleteById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"204": {
						"description": "Deleted Completed"
					}
				},
				"deprecated": false
			},
			"patch": {
				"tags": ["CourseOfAction"],
				"summary": "Patch attributes for a model instance and persist it into the data source.",
				"operationId": "CourseOfAction.prototype.patchAttributes",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "An object of model property name/value pairs",
					"required": false,
					"schema": {
						"$ref": "#/definitions/CourseOfActionResource"
					}
				}, {
					"name": "id",
					"in": "path",
					"description": "PersistedModel id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/CourseOfActionResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			}
		},
		"/indicators": {
			"post": {
				"tags": ["Indicator"],
				"summary": "Create a new instance of the model and persist it into the data source.",
				"operationId": "Indicator.create",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "Model instance data",
					"required": false,
					"schema": {
						"$ref": "#/definitions/IndicatorResource"
					}
				}],
				"responses": {
					"201": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/IndicatorResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"get": {
				"tags": ["Indicator"],
				"summary": "Find all instances of the model matched by filter from the data source.",
				"operationId": "Indicator.find",
				"parameters": [{
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields, where, include, order, offset, and limit",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/IndicatorResources"
						}
					}
				},
				"deprecated": false
			}
		},
		"/indicators/{id}": {
			"get": {
				"tags": ["Indicator"],
				"summary": "Find a model instance by {{id}} from the data source.",
				"operationId": "Indicator.findById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}, {
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields and include",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/IndicatorResource"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"delete": {
				"tags": ["Indicator"],
				"summary": "Delete a model instance by {{id}} from the data source.",
				"operationId": "Indicator.deleteById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"204": {
						"description": "Deleted Completed"
					}
				},
				"deprecated": false
			},
			"patch": {
				"tags": ["Indicator"],
				"summary": "Patch attributes for a model instance and persist it into the data source.",
				"operationId": "Indicator.prototype.patchAttributes",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "An object of model property name/value pairs",
					"required": false,
					"schema": {
						"$ref": "#/definitions/IndicatorResource"
					}
				}, {
					"name": "id",
					"in": "path",
					"description": "PersistedModel id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/IndicatorResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			}
		},
		"/malwares": {
			"post": {
				"tags": ["Malware"],
				"summary": "Create a new instance of the model and persist it into the data source.",
				"operationId": "Malware.create",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "Model instance data",
					"required": false,
					"schema": {
						"$ref": "#/definitions/MalwareResource"
					}
				}],
				"responses": {
					"201": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/MalwareResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"get": {
				"tags": ["Malware"],
				"summary": "Find all instances of the model matched by filter from the data source.",
				"operationId": "Malware.find",
				"parameters": [{
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields, where, include, order, offset, and limit",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/MalwareResources"
						}
					}
				},
				"deprecated": false
			}
		},
		"/malwares/{id}": {
			"get": {
				"tags": ["Malware"],
				"summary": "Find a model instance by {{id}} from the data source.",
				"operationId": "Malware.findById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}, {
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields and include",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/MalwareResource"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"delete": {
				"tags": ["Malware"],
				"summary": "Delete a model instance by {{id}} from the data source.",
				"operationId": "Malware.deleteById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"204": {
						"description": "Deleted Completed"
					}
				},
				"deprecated": false
			},
			"patch": {
				"tags": ["Malware"],
				"summary": "Patch attributes for a model instance and persist it into the data source.",
				"operationId": "Malware.prototype.patchAttributes",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "An object of model property name/value pairs",
					"required": false,
					"schema": {
						"$ref": "#/definitions/MalwareResource"
					}
				}, {
					"name": "id",
					"in": "path",
					"description": "PersistedModel id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/MalwareResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			}
		},
		"/relationships": {
			"post": {
				"tags": ["Relationship"],
				"summary": "Create a new instance of the model and persist it into the data source.",
				"operationId": "Relationship.create",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "Model instance data",
					"required": false,
					"schema": {
						"$ref": "#/definitions/RelationshipResource"
					}
				}],
				"responses": {
					"201": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/RelationshipResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"get": {
				"tags": ["Relationship"],
				"summary": "Find all instances of the model matched by filter from the data source.",
				"operationId": "Relationship.find",
				"parameters": [{
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields, where, include, order, offset, and limit",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/RelationshipResources"
						}
					}
				},
				"deprecated": false
			}
		},
		"/relationships/{id}": {
			"get": {
				"tags": ["Relationship"],
				"summary": "Find a model instance by {{id}} from the data source.",
				"operationId": "Relationship.findById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}, {
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields and include",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/RelationshipResource"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"delete": {
				"tags": ["Relationship"],
				"summary": "Delete a model instance by {{id}} from the data source.",
				"operationId": "Relationship.deleteById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"204": {
						"description": "Deleted Completed"
					}
				},
				"deprecated": false
			},
			"patch": {
				"tags": ["Relationship"],
				"summary": "Patch attributes for a model instance and persist it into the data source.",
				"operationId": "Relationship.prototype.patchAttributes",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "An object of model property name/value pairs",
					"required": false,
					"schema": {
						"$ref": "#/definitions/RelationshipResource"
					}
				}, {
					"name": "id",
					"in": "path",
					"description": "PersistedModel id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/RelationshipResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			}
		},
		"/reports": {
			"post": {
				"tags": ["Report"],
				"summary": "Create a new instance of the model and persist it into the data source.",
				"operationId": "Report.create",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "Model instance data",
					"required": false,
					"schema": {
						"$ref": "#/definitions/ReportResource"
					}
				}],
				"responses": {
					"201": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/ReportResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"get": {
				"tags": ["Report"],
				"summary": "Find all instances of the model matched by filter from the data source.",
				"operationId": "Report.find",
				"parameters": [{
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields, where, include, order, offset, and limit",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/ReportResources"
						}
					}
				},
				"deprecated": false
			}
		},
		"/reports/{id}": {
			"get": {
				"tags": ["Report"],
				"summary": "Find a model instance by {{id}} from the data source.",
				"operationId": "Report.findById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}, {
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields and include",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/ReportResource"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"delete": {
				"tags": ["Report"],
				"summary": "Delete a model instance by {{id}} from the data source.",
				"operationId": "Report.deleteById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"204": {
						"description": "Deleted Completed"
					}
				},
				"deprecated": false
			},
			"patch": {
				"tags": ["Report"],
				"summary": "Patch attributes for a model instance and persist it into the data source.",
				"operationId": "Report.prototype.patchAttributes",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "An object of model property name/value pairs",
					"required": false,
					"schema": {
						"$ref": "#/definitions/ReportResource"
					}
				}, {
					"name": "id",
					"in": "path",
					"description": "PersistedModel id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/ReportResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			}
		},
		"/threat-actors": {
			"post": {
				"tags": ["ThreatActor"],
				"summary": "Create a new instance of the model and persist it into the data source.",
				"operationId": "ThreatActor.create",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "Model instance data",
					"required": false,
					"schema": {
						"$ref": "#/definitions/ThreatActorResource"
					}
				}],
				"responses": {
					"201": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/ThreatActorResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"get": {
				"tags": ["ThreatActor"],
				"summary": "Find all instances of the model matched by filter from the data source.",
				"operationId": "ThreatActor.find",
				"parameters": [{
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields, where, include, order, offset, and limit",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/ThreatActorResources"
						}
					}
				},
				"deprecated": false
			}
		},
		"/threat-actors/{id}": {
			"get": {
				"tags": ["ThreatActor"],
				"summary": "Find a model instance by {{id}} from the data source.",
				"operationId": "ThreatActor.findById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}, {
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields and include",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/ThreatActorResource"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"delete": {
				"tags": ["ThreatActor"],
				"summary": "Delete a model instance by {{id}} from the data source.",
				"operationId": "ThreatActor.deleteById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"204": {
						"description": "Deleted Completed"
					}
				},
				"deprecated": false
			},
			"patch": {
				"tags": ["ThreatActor"],
				"summary": "Patch attributes for a model instance and persist it into the data source.",
				"operationId": "ThreatActor.prototype.patchAttributes",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "An object of model property name/value pairs",
					"required": false,
					"schema": {
						"$ref": "#/definitions/ThreatActorResource"
					}
				}, {
					"name": "id",
					"in": "path",
					"description": "PersistedModel id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/ThreatActorResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			}
		},
		"/tools": {
			"post": {
				"tags": ["Tool"],
				"summary": "Create a new instance of the model and persist it into the data source.",
				"operationId": "Tool.create",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "Model instance data",
					"required": false,
					"schema": {
						"$ref": "#/definitions/ToolResource"
					}
				}],
				"responses": {
					"201": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/ToolResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"get": {
				"tags": ["Tool"],
				"summary": "Find all instances of the model matched by filter from the data source.",
				"operationId": "Tool.find",
				"parameters": [{
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields, where, include, order, offset, and limit",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/ToolResources"
						}
					}
				},
				"deprecated": false
			}
		},
		"/tools/{id}": {
			"get": {
				"tags": ["Tool"],
				"summary": "Find a model instance by {{id}} from the data source.",
				"operationId": "Tool.findById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}, {
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields and include",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/ToolResource"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"delete": {
				"tags": ["Tool"],
				"summary": "Delete a model instance by {{id}} from the data source.",
				"operationId": "Tool.deleteById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"204": {
						"description": "Deleted Completed"
					}
				},
				"deprecated": false
			},
			"patch": {
				"tags": ["Tool"],
				"summary": "Patch attributes for a model instance and persist it into the data source.",
				"operationId": "Tool.prototype.patchAttributes",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "An object of model property name/value pairs",
					"required": false,
					"schema": {
						"$ref": "#/definitions/ToolResource"
					}
				}, {
					"name": "id",
					"in": "path",
					"description": "PersistedModel id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/ToolResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			}
		},
		"/identities": {
			"post": {
				"tags": ["Identity"],
				"summary": "Create a new instance of the model and persist it into the data source.",
				"operationId": "Identity.create",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "Model instance data",
					"required": false,
					"schema": {
						"$ref": "#/definitions/IdentityResource"
					}
				}],
				"responses": {
					"201": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/IdentityResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"get": {
				"tags": ["Identity"],
				"summary": "Find all instances of the model matched by filter from the data source.",
				"operationId": "Identity.find",
				"parameters": [{
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields, where, include, order, offset, and limit",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/IdentityResources"
						}
					}
				},
				"deprecated": false
			}
		},
		"/identities/{id}": {
			"get": {
				"tags": ["Identity"],
				"summary": "Find a model instance by {{id}} from the data source.",
				"operationId": "Identity.findById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}, {
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields and include",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/IdentityResource"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"delete": {
				"tags": ["Identity"],
				"summary": "Delete a model instance by {{id}} from the data source.",
				"operationId": "Identity.deleteById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"204": {
						"description": "Deleted Completed"
					}
				},
				"deprecated": false
			},
			"patch": {
				"tags": ["Identity"],
				"summary": "Patch attributes for a model instance and persist it into the data source.",
				"operationId": "Identity.prototype.patchAttributes",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "An object of model property name/value pairs",
					"required": false,
					"schema": {
						"$ref": "#/definitions/IdentityResource"
					}
				}, {
					"name": "id",
					"in": "path",
					"description": "PersistedModel id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/IdentityResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			}
		},
		"/observable-paths": {
			"post": {
				"tags": ["ObservablePath"],
				"summary": "Create a new instance of the model and persist it into the data source.",
				"operationId": "ObservablePath.create",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "Model instance data",
					"required": false,
					"schema": {
						"$ref": "#/definitions/ObservablePathResource"
					}
				}],
				"responses": {
					"201": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/ObservablePathResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"get": {
				"tags": ["ObservablePath"],
				"summary": "Find all instances of the model matched by filter from the data source.",
				"operationId": "ObservablePath.find",
				"parameters": [{
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields, where, include, order, offset, and limit",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/ObservablePathResources"
						}
					}
				},
				"deprecated": false
			}
		},
		"/observable-paths/{id}": {
			"get": {
				"tags": ["ObservablePath"],
				"summary": "Find a model instance by {{id}} from the data source.",
				"operationId": "ObservablePath.findById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}, {
					"name": "filter",
					"in": "query",
					"description": "Filter defining fields and include",
					"required": false,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/ObservablePathResource"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			},
			"delete": {
				"tags": ["ObservablePath"],
				"summary": "Delete a model instance by {{id}} from the data source.",
				"operationId": "ObservablePath.deleteById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Model id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"204": {
						"description": "Deleted Completed"
					}
				},
				"deprecated": false
			},
			"patch": {
				"tags": ["ObservablePath"],
				"summary": "Patch attributes for a model instance and persist it into the data source.",
				"operationId": "ObservablePath.prototype.patchAttributes",
				"parameters": [{
					"name": "data",
					"in": "body",
					"description": "An object of model property name/value pairs",
					"required": false,
					"schema": {
						"$ref": "#/definitions/ObservablePathResource"
					}
				}, {
					"name": "id",
					"in": "path",
					"description": "PersistedModel id",
					"required": true,
					"type": "string",
					"format": "JSON"
				}],
				"responses": {
					"200": {
						"description": "Request was successful",
						"schema": {
							"$ref": "#/definitions/ObservablePathResource"
						}
					},
					"400": {
						"description": "Resource malformed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"404": {
						"description": "Resource not found",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					},
					"422": {
						"description": "Resource cannot be processed",
						"schema": {
							"$ref": "#/definitions/ErrorObjects"
						}
					}
				},
				"deprecated": false
			}
		}
	},
	"tags": [{
		"name": "MarkingDefinition"
	}, {
		"name": "AttackPattern"
	}, {
		"name": "Campaign"
	}, {
		"name": "CourseOfAction"
	}, {
		"name": "Indicator"
	}, {
		"name": "Malware"
	}, {
		"name": "Relationship"
	}, {
		"name": "Report"
	}, {
		"name": "ThreatActor"
	}, {
		"name": "Tool"
	}, {
		"name": "Identity"
	}, {
		"name": "ObservablePath"
	}],
	"consumes": ["application/vnd.api+json"],
	"produces": ["application/vnd.api+json"],
	"definitions": {
		"ExternalReference": {
			"properties": {
				"source_name": {
					"type": "string"
				},
				"external_id": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"url": {
					"pattern": "^((http[s]?|ftp):\\/)?/?([^:\\/\\s]+)((\\/\\w+)*\\/)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$",
					"type": "string"
				}
			},
			"required": ["source_name"],
			"additionalProperties": false
		},
		"GranularMarking": {
			"properties": {
				"marking_ref": {
					"type": "string"
				},
				"selectors": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": ["marking_ref"],
			"additionalProperties": false
		},
		"KillChainPhase": {
			"properties": {
				"kill_chain_name": {
					"type": "string"
				},
				"phase_name": {
					"type": "string"
				}
			},
			"required": ["kill_chain_name", "phase_name"],
			"additionalProperties": false
		},
		"MarkingDefinitionAttributes": {
			"properties": {
				"definition_type": {
					"type": "string"
				},
				"definition": {
					"type": "object"
				},
				"created": {
					"format": "date-time",
					"type": "string"
				},
				"external_references": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExternalReference"
					}
				},
				"granular_markings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/GranularMarking"
					}
				}
			},
			"required": ["definition_type", "definition"],
			"additionalProperties": false
		},
		"MarkingDefinitionResourceObject": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"enum": ["marking-definitions"]
				},
				"attributes": {
					"$ref": "#/definitions/MarkingDefinitionAttributes"
				}
			}
		},
		"MarkingDefinitionResource": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"$ref": "#/definitions/MarkingDefinitionResourceObject"
				}
			}
		},
		"MarkingDefinitionResources": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MarkingDefinitionResourceObject"
					}
				}
			}
		},
		"AttackPatternAttributes": {
			"properties": {
				"created": {
					"format": "date-time",
					"type": "string"
				},
				"modified": {
					"format": "date-time",
					"type": "string"
				},
				"version": {
					"type": "number",
					"format": "double"
				},
				"labels": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"external_references": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExternalReference"
					}
				},
				"granular_markings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/GranularMarking"
					}
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"kill_chain_phases": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/KillChainPhase"
					}
				}
			},
			"required": ["created", "modified", "version", "name"],
			"additionalProperties": false
		},
		"AttackPatternResourceObject": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"enum": ["attack-patterns"]
				},
				"attributes": {
					"$ref": "#/definitions/AttackPatternAttributes"
				}
			}
		},
		"AttackPatternResource": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"$ref": "#/definitions/AttackPatternResourceObject"
				}
			}
		},
		"AttackPatternResources": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AttackPatternResourceObject"
					}
				}
			}
		},
		"CampaignAttributes": {
			"properties": {
				"created": {
					"format": "date-time",
					"type": "string"
				},
				"modified": {
					"format": "date-time",
					"type": "string"
				},
				"version": {
					"type": "number",
					"format": "double"
				},
				"labels": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"external_references": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExternalReference"
					}
				},
				"granular_markings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/GranularMarking"
					}
				},
				"aliases": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"first_seen": {
					"format": "date-time",
					"type": "string"
				},
				"objective": {
					"type": "string"
				},
				"timestamp_precision": {
					"enum": ["year", "month", "day", "hour", "minute", "full"],
					"type": "string"
				}
			},
			"required": ["created", "modified", "version", "name"],
			"additionalProperties": false
		},
		"CampaignResourceObject": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"enum": ["campaigns"]
				},
				"attributes": {
					"$ref": "#/definitions/CampaignAttributes"
				}
			}
		},
		"CampaignResource": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"$ref": "#/definitions/CampaignResourceObject"
				}
			}
		},
		"CampaignResources": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CampaignResourceObject"
					}
				}
			}
		},
		"CourseOfActionAttributes": {
			"properties": {
				"created": {
					"format": "date-time",
					"type": "string"
				},
				"modified": {
					"format": "date-time",
					"type": "string"
				},
				"version": {
					"type": "number",
					"format": "double"
				},
				"labels": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"external_references": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExternalReference"
					}
				},
				"granular_markings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/GranularMarking"
					}
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				}
			},
			"required": ["created", "modified", "version", "name"],
			"additionalProperties": false
		},
		"CourseOfActionResourceObject": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"enum": ["course-of-actions"]
				},
				"attributes": {
					"$ref": "#/definitions/CourseOfActionAttributes"
				}
			}
		},
		"CourseOfActionResource": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"$ref": "#/definitions/CourseOfActionResourceObject"
				}
			}
		},
		"CourseOfActionResources": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CourseOfActionResourceObject"
					}
				}
			}
		},
		"IndicatorAttributes": {
			"properties": {
				"created": {
					"format": "date-time",
					"type": "string"
				},
				"modified": {
					"format": "date-time",
					"type": "string"
				},
				"version": {
					"type": "number",
					"format": "double"
				},
				"labels": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"external_references": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExternalReference"
					}
				},
				"granular_markings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/GranularMarking"
					}
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"pattern_lang": {
					"type": "string"
				},
				"pattern_lang_version": {
					"type": "string"
				},
				"pattern": {
					"type": "string"
				},
				"valid_from": {
					"format": "date-time",
					"type": "string"
				},
				"valid_until": {
					"format": "date-time",
					"type": "string"
				},
				"kill_chain_phases": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/KillChainPhase"
					}
				}
			},
			"required": ["created", "modified", "version", "pattern"],
			"additionalProperties": false
		},
		"IndicatorResourceObject": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"enum": ["indicators"]
				},
				"attributes": {
					"$ref": "#/definitions/IndicatorAttributes"
				}
			}
		},
		"IndicatorResource": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"$ref": "#/definitions/IndicatorResourceObject"
				}
			}
		},
		"IndicatorResources": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/IndicatorResourceObject"
					}
				}
			}
		},
		"MalwareAttributes": {
			"properties": {
				"created": {
					"format": "date-time",
					"type": "string"
				},
				"modified": {
					"format": "date-time",
					"type": "string"
				},
				"version": {
					"type": "number",
					"format": "double"
				},
				"labels": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"external_references": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExternalReference"
					}
				},
				"granular_markings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/GranularMarking"
					}
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"kill_chain_phases": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/KillChainPhase"
					}
				}
			},
			"required": ["created", "modified", "version", "name"],
			"additionalProperties": false
		},
		"MalwareResourceObject": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"enum": ["malwares"]
				},
				"attributes": {
					"$ref": "#/definitions/MalwareAttributes"
				}
			}
		},
		"MalwareResource": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"$ref": "#/definitions/MalwareResourceObject"
				}
			}
		},
		"MalwareResources": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MalwareResourceObject"
					}
				}
			}
		},
		"RelationshipAttributes": {
			"properties": {
				"created": {
					"format": "date-time",
					"type": "string"
				},
				"modified": {
					"format": "date-time",
					"type": "string"
				},
				"version": {
					"type": "number",
					"format": "double"
				},
				"labels": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"external_references": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExternalReference"
					}
				},
				"granular_markings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/GranularMarking"
					}
				},
				"relationship_type": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"source_ref": {
					"type": "string"
				},
				"target_ref": {
					"type": "string"
				}
			},
			"required": ["created", "modified", "version", "relationship_type", "source_ref", "target_ref"],
			"additionalProperties": false
		},
		"RelationshipResourceObject": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"enum": ["relationships"]
				},
				"attributes": {
					"$ref": "#/definitions/RelationshipAttributes"
				}
			}
		},
		"RelationshipResource": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"$ref": "#/definitions/RelationshipResourceObject"
				}
			}
		},
		"RelationshipResources": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RelationshipResourceObject"
					}
				}
			}
		},
		"ReportAttributes": {
			"properties": {
				"created": {
					"format": "date-time",
					"type": "string"
				},
				"modified": {
					"format": "date-time",
					"type": "string"
				},
				"version": {
					"type": "number",
					"format": "double"
				},
				"labels": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"external_references": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExternalReference"
					}
				},
				"granular_markings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/GranularMarking"
					}
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"published": {
					"format": "date-time",
					"type": "string"
				},
				"object_refs": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": ["created", "modified", "version", "name", "published"],
			"additionalProperties": false
		},
		"ReportResourceObject": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"enum": ["reports"]
				},
				"attributes": {
					"$ref": "#/definitions/ReportAttributes"
				}
			}
		},
		"ReportResource": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"$ref": "#/definitions/ReportResourceObject"
				}
			}
		},
		"ReportResources": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ReportResourceObject"
					}
				}
			}
		},
		"ThreatActorAttributes": {
			"properties": {
				"created": {
					"format": "date-time",
					"type": "string"
				},
				"modified": {
					"format": "date-time",
					"type": "string"
				},
				"version": {
					"type": "number",
					"format": "double"
				},
				"labels": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"external_references": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExternalReference"
					}
				},
				"granular_markings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/GranularMarking"
					}
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"aliases": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": ["created", "modified", "version", "name"],
			"additionalProperties": false
		},
		"ThreatActorResourceObject": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"enum": ["threat-actors"]
				},
				"attributes": {
					"$ref": "#/definitions/ThreatActorAttributes"
				}
			}
		},
		"ThreatActorResource": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"$ref": "#/definitions/ThreatActorResourceObject"
				}
			}
		},
		"ThreatActorResources": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ThreatActorResourceObject"
					}
				}
			}
		},
		"ToolAttributes": {
			"properties": {
				"created": {
					"format": "date-time",
					"type": "string"
				},
				"modified": {
					"format": "date-time",
					"type": "string"
				},
				"version": {
					"type": "number",
					"format": "double"
				},
				"labels": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"external_references": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExternalReference"
					}
				},
				"granular_markings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/GranularMarking"
					}
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"aliases": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"kill_chain_phases": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/KillChainPhase"
					}
				}
			},
			"required": ["created", "modified", "version", "name"],
			"additionalProperties": false
		},
		"ToolResourceObject": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"enum": ["tools"]
				},
				"attributes": {
					"$ref": "#/definitions/ToolAttributes"
				}
			}
		},
		"ToolResource": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"$ref": "#/definitions/ToolResourceObject"
				}
			}
		},
		"ToolResources": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ToolResourceObject"
					}
				}
			}
		},
		"IdentityAttributes": {
			"properties": {
				"created": {
					"format": "date-time",
					"type": "string"
				},
				"modified": {
					"format": "date-time",
					"type": "string"
				},
				"version": {
					"type": "number",
					"format": "double"
				},
				"labels": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"external_references": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExternalReference"
					}
				},
				"granular_markings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/GranularMarking"
					}
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"identity_class": {
					"enum": ["individual", "group", "organization", "class", "unknown"],
					"type": "string"
				},
				"contact_information": {
					"type": "string"
				},
				"sectors": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": ["created", "modified", "version", "name", "identity_class"],
			"additionalProperties": false
		},
		"IdentityResourceObject": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"enum": ["identities"]
				},
				"attributes": {
					"$ref": "#/definitions/IdentityAttributes"
				}
			}
		},
		"IdentityResource": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"$ref": "#/definitions/IdentityResourceObject"
				}
			}
		},
		"IdentityResources": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/IdentityResourceObject"
					}
				}
			}
		},
		"ObservablePathAttributes": {
			"properties": {
				"created": {
					"format": "date-time",
					"type": "string"
				},
				"modified": {
					"format": "date-time",
					"type": "string"
				},
				"version": {
					"type": "number",
					"format": "double"
				},
				"labels": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"external_references": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExternalReference"
					}
				},
				"granular_markings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/GranularMarking"
					}
				},
				"object_type": {
					"type": "string"
				},
				"property_name": {
					"type": "string"
				},
				"key_name": {
					"type": "string"
				},
				"object_action": {
					"type": "string"
				}
			},
			"required": ["created", "modified", "version", "object_type", "property_name", "object_action"],
			"additionalProperties": false
		},
		"ObservablePathResourceObject": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"enum": ["observable-paths"]
				},
				"attributes": {
					"$ref": "#/definitions/ObservablePathAttributes"
				}
			}
		},
		"ObservablePathResource": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"$ref": "#/definitions/ObservablePathResourceObject"
				}
			}
		},
		"ObservablePathResources": {
			"type": "object",
			"properties": {
				"links": {
					"$ref": "#/definitions/ResourceLinks"
				},
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ObservablePathResourceObject"
					}
				}
			}
		},
		"ResourceLinks": {
			"type": "object",
			"properties": {
				"self": {
					"type": "string"
				}
			}
		},
		"ErrorObject": {
			"properties": {
				"status": {
					"type": "number",
					"enum": [400, 404, 422, 500]
				},
				"source": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"detail": {
					"type": "string"
				}
			}
		},
		"ErrorObjects": {
			"properties": {
				"errors": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ErrorObject"
					}
				}
			}
		}
	}
}